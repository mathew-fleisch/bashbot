# Name:        example-bashbot-github-action-gate.yaml
# Author:      Mathew Fleisch <mathew.fleisch@gmail.com>
# Description: This action demonstrates how to trigger a GitHub action from Bashbot,
#              spawning another instance of bashbot to act as a manual approval gate.
name: Example Bashbot Triggered GitHub Action Gate
on:
  repository_dispatch:
    types:
      - trigger-github-action-gate

jobs:
  build:
    name: Example Bashbot Triggered GitHub Action Gate
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - 
        name: Install bashbot with asdf
        uses: asdf-vm/actions/install@v1
        with:
          tool_versions: |
            bashbot 2.0.0
            yq 4.30.6
      -
        name: Send Slack Message With Bashbot Binary
        env:
          BASHBOT_CONFIG_FILEPATH: ./config.yaml
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
          SLACK_CHANNEL: ${{ github.event.client_payload.channel }}
          SLACK_USERID: ${{ github.event.client_payload.user_id }}
          LOG_LEVEL: info
          LOG_FORMAT: text
          GIT_TOKEN: ${{ github.token }}
        run: |
          asdf global yq 4.30.6
          cat <<EOF > $BASHBOT_CONFIG_FILEPATH
          admins:
            - trigger: "!example-gate"
              appName: Bashbot Example Gate
              userIds:
                - "UP3BBQX34"
              privateChannelId: "GPFMM5MD2"
              logChannelId: "CPJ1NFPL7"
          messages:
          - active: true
            name: processing_command
            text: ":robot_face: Processing command..."
          - active: true
            name: command_not_found
            text: ":thinking_face: Command not found..."
          - active: true
            name: incorrect_parameters
            text: ":face_with_monocle: Incorrect number of parameters"
          - active: true
            name: invalid_parameter
            text: ":face_with_monocle: Invalid parameter value: %s"
          - active: true
            name: ephemeral
            text: ":shushing_face: Message only shown to user who triggered it."
          - active: true
            name: unauthorized
            text: |-
              :skull_and_crossbones: You are not authorized to use this command in this channel.
              Allowed in: [%s]
          - active: true
            name: missingenvvar
            text: ":skull_and_crossbones: This command requires this environment variable to be set: [%s]"
          - active: true
            name: missingdependency
            text: ":skull_and_crossbones: This command requires: [%s]"
          tools:
          - name: BashBot Gate Help
            description: Show this message
            envvars:
              - BASHBOT_CONFIG_FILEPATH
            dependencies:
              - yq
            help: "!example-gate help"
            trigger: help
            location: "./"
            command:
              - "echo 'BashBot gate running in a Github Action will auto-fail in 5min after startup' &&"
              - "echo '```!example-gate exit 0 - pass job successfully' &&"
              - "echo '!example-gate exit 1 - fail job' &&"
              - "yq e '.tools[] | {.help: .description}' \"${BASHBOT_CONFIG_FILEPATH}\""
              - "| sed -e 's/\\\"//g'"
              - "| sed -e 's/:/ -/g' &&"
              - "echo '```'"
            parameters: []
            log: true
            ephemeral: false
            response: text
            permissions:
              - GPFMM5MD2
          - name: Info about host
            description: Show debugging information about host
            envvars: []
            dependencies: []
            help: "!example-gate info"
            trigger: info
            location: "./"
            command:
              - "echo '$ whoami' &&"
              - "whoami &&"
              - "echo '$ uname -a' &&"
              - "uname -a &&"
              - "echo '$ uptime' &&"
              - "uptime &&"
              - "echo '$ pwd' &&"
              - "pwd &&"
              - "echo '$ ls -alF' &&"
              - "ls -alF"
            parameters: []
            log: true
            ephemeral: false
            response: text
            permissions:
              - GPFMM5MD2
          - name: Debug state of host
            description: With great power, comes great responsibility
            envvars: []
            dependencies: []
            help: "!example-gate debug $([command])"
            trigger: debug
            location: ./
            command:
              - "${command} || true"
            parameters:
              - name: command
                allowed: []
                description: This should allow any text to be used as input
                match: .*
            log: false
            ephemeral: false
            response: code
            permissions:
              - GPFMM5MD2
          dependencies: []
          EOF
          # Send user notification bashbot gate has started
          bashbot send-message \
            --log-level "${LOG_LEVEL}" \
            --log-format "${LOG_FORMAT}" \
            --channel ${SLACK_CHANNEL} \
            --msg "Bashbot gate started by <@${SLACK_USERID}>. To see options, run: !example-gate help"
          # Start bashbot
          bashbot run \
            --log-level "${LOG_LEVEL}" \
            --log-format "${LOG_FORMAT}"
          