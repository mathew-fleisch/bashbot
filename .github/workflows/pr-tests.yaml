# Name:        pr-tests.yaml
# Author:      Mathew Fleisch <mathew.fleisch@gmail.com>
# Description: This action will run go lint/unit tests as well as
#              build a docker container and test it against a KinD cluster.
#              See Makefile for more details.
name: PR Tests
on:
  pull_request:
    branches:
      - main
      - v2 # TODO: REMOVE THIS BEFORE MERGING

jobs:
  unit_test:
    name: Lint and Unit Tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - 
        name: Install stuff with asdf
        uses: asdf-vm/actions/install@v1
        with:
          tool_versions: |
            action-validator 0.1.2
            dockle 0.4.5
            helm 3.8.1
            golangci-lint 1.44.2
            yq 4.22.1
      -
        name: Lint Actions
        run: make test-lint-actions

      # -
      #   name: Lint Go
      #   run: make test-lint

      -
        name: Unit Tests
        run: make test-go

      # -
      #   name: Lint Container Using Dockle
      #   env:
      #     DOCKER_CONTENT_TRUST: 1
      #   run: |
      #     make docker-build
      #     make test-docker

  integration_test:
    name: KinD Integration Tests
    # needs: [unit_test]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: KinD Test
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_APP_TOKEN: ${{ secrets.SLACK_APP_TOKEN }}
          GIT_TOKEN: not-used
        run: |
          cp sample-config.json helm/bashbot/config.json
          cp .tool-versions helm/bashbot/.tool-versions
          if [[ -z "$SLACK_BOT_TOKEN" ]] || [[ -z "$SLACK_APP_TOKEN" ]]; then
            echo "Missing github secret(s): SLACK_BOT_TOKEN, SLACK_APP_TOKEN"
            exit 1
          fi
          cat sample-env-file | envsubst > helm/bashbot/.env \
            && cp helm/bashbot/.env .env \
            && make test-kind \
            && rm -rf helm/bashbot/.env \
            && rm -rf .env \
            && make test-kind-cleanup \
            && echo "Deployment assets and KinD cluster removed"
      -
        name: Debug 
        if: ${{ always() }}
        shell: bash
        run: |
          make help
          ls -alF
          kubectl cluster-info
          kubectl version
          helm version
          helm list -n bashbot
          echo "Deployments:"
          kubectl --namespace bashbot get deployments -o wide
          echo "Pods:"
          kubectl --namespace bashbot get pods -o wide
          echo "Service Accounts:"
          kubectl --namespace bashbot get serviceaccounts
          echo "Secrets:"
          kubectl --namespace bashbot get secrets
          echo "Configmaps:"
          kubectl --namespace bashbot get configmaps
          # echo "bashbot Config:"
          # kubectl --namespace bashbot get configmaps bashbot-configmap -o jsonpath='{.data.config\.json}' | jq '.' || true
          echo "Describe bashbot pod:"
          kubectl --namespace bashbot describe pod $(kubectl --namespace bashbot get pods | grep bashbot | awk '{print $1}') || true
          echo "Logs:"
          kubectl --namespace bashbot logs $(kubectl --namespace bashbot get pods | grep bashbot | awk '{print $1}') || true

