apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.botname }}
  name: {{ .Values.botname }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{ .Values.botname }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.botname }}
    spec:
      containers:
        - env:
            - name: LOG_LEVEL
              value: {{ .Values.log_level }}
            - name: LOG_FORMAT
              value: {{ .Values.log_format }}
            - name: BOTNAME
              value: {{ .Values.botname }}
            - name: NAMESPACE
              value: {{ .Values.namespace }}
            - name: SLACK_BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.botname }}-env
                  key: SLACK_BOT_TOKEN
            - name: SLACK_APP_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.botname }}-env
                  key: SLACK_APP_TOKEN
            - name: GIT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.botname }}-env
                  key: GIT_TOKEN
                  optional: true
            - name: AIRQUALITY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.botname }}-env
                  key: AIRQUALITY_API_KEY
                  optional: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pullPolicy }}
          name: {{ .Values.botname }}
          command:
          {{- range .Values.image.command }}
            - {{. | quote }}
          {{- end }}
          args:
          {{- range .Values.image.args }}
            - {{. | quote }}
          {{- end }}
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          workingDir: /bashbot
          volumeMounts:
            - name: {{ .Values.botname }}-configmap
              mountPath: /bashbot/config.yaml
              subPath: config.yaml
            - name: {{ .Values.botname }}-configmap
              mountPath: /bashbot/.tool-versions
              subPath: .tool-versions
      volumes:
        - name: {{ .Values.botname }}-configmap
          configMap:
            name: {{ .Values.botname }}-configmap
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- if .Values.serviceAccount.create -}}{{printf "\n" }}
      serviceAccount:  {{ include "bashbot.serviceAccountName" . }}
      serviceAccountName:  {{ include "bashbot.serviceAccountName" . }}
      automountServiceAccountToken: true
      {{- end }}
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 0
