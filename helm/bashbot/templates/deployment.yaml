apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.botname }}
  name: {{ .Values.botname }}
  namespace: {{ .Values.namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: {{ .Values.botname }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.botname }}
    spec:
      containers:
        - env:
            - name: BASHBOT_ENV_VARS_FILEPATH
              value: /bashbot/.env
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          name: {{ .Values.botname }}
          command: ["/bashbot/entrypoint.sh"]
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          workingDir: /bashbot
          volumeMounts:
            - name: bashbot-configmap
              mountPath: /bashbot/config.json
              subPath: config.json
            - name: bashbot-configmap
              mountPath: /bashbot/.tool-versions
              subPath: .tool-versions
            - name: bashbot-configmap
              mountPath: /bashbot/.env
              subPath: .env
      volumes:
        - name: bashbot-configmap
          configMap:
            name: bashbot-configmap
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      {{- if .Values.serviceAccount.create -}}{{printf "\n" }}
      serviceAccount: bashbot
      serviceAccountName: bashbot
      automountServiceAccountToken: true
      {{- end }}
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 0
