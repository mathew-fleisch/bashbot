{
  "admins": [
    {
      "trigger": "bashbat",
      "appName": "BashBot",
      "userIds": ["ADMIN-USER-ID"],
      "privateChannelId": "PRIVATE-CHANNEL-ID",
      "logChannelId": "LOG-CHANNEL-ID"
    }
  ],
  "messages": [
    {
      "active": true,
      "name": "processing_command",
      "text": ":robot_face: Processing command..."
    },
    {
      "active": true,
      "name": "processing_raw_command",
      "text": ":smiling_imp: Processing raw command..."
    },
    {
      "active": true,
      "name": "command_not_found",
      "text": ":thinking_face: Command not found..."
    },
    {
      "active": true,
      "name": "incorrect_parameters",
      "text": ":face_with_monocle: Incorrect number of parameters"
    },
    {
      "active": true,
      "name": "invalid_parameter",
      "text": ":face_with_monocle: Invalid parameter value: %s"
    },
    {
      "active": true,
      "name": "ephemeral",
      "text": ":shushing_face: Message only shown to user who triggered it."
    },
    {
      "active": true,
      "name": "unauthorized",
      "text": ":skull_and_crossbones: You are not authorized to use this command in this channel.\nAllowed in: [%s]"
    },
    {
      "active": true,
      "name": "missingenvvar",
      "text": ":skull_and_crossbones: This command requires this environment variable to be set: [%s]"
    },
    {
      "active": true,
      "name": "missingdependency",
      "text": ":skull_and_crossbones: This command requires: [%s]"
    }
  ],
  "tools": [
    {
      "name": "BashBot Help",
      "description": "Show this message",
      "help": "bashbot help",
      "trigger": "help",
      "location": "./",
      "command": [
        "echo \"BashBot is a tool for infrastructure/devops teams to automate tasks triggered by slash-command-like declarative configuration\"",
        "echo \"\\`\\`\\`\"",
        "&& jq -r -c '.tools[] | \"\\(.help) - \\(.description)\"' ${BASHBOT_CONFIG_FILEPATH}",
        "&& echo \"\\`\\`\\`\""
      ],
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "text",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "Get User/Channel Info",
      "description": "Get information about the user and channel command is being run from",
      "help": "bashbot info",
      "trigger": "info",
      "location": "./example/info",
      "command": ["./get-info.sh"],
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "List Installed Bashbot Commands",
      "description": "List all configured bashbot commands",
      "help": "bashbot list",
      "trigger": "list",
      "location": "./",
      "command": ["jq -r '.tools[] | .trigger + \" - \" + .name' ${BASHBOT_CONFIG_FILEPATH}"],
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "Describe Bashbot [command]",
      "description": "Show the json object for a specific command",
      "help": "bashbot describe [command]",
      "trigger": "describe",
      "location": "./",
      "command": ["jq '.tools[] | select(.trigger==\"${command}\")' ${BASHBOT_CONFIG_FILEPATH}"],
      "parameters": [
        {
          "name": "command",
          "allowed": [],
          "description": "a command to describe ('bashbot list')",
          "source": ["jq -r '.tools[] | .trigger' ${BASHBOT_CONFIG_FILEPATH}"]
        }
      ],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "TEST Command",
      "description": "Show the json object for a specific command",
      "help": "bashbot test [command]",
      "trigger": "test",
      "location": "./",
      "command": [
        "echo \"Username[id]: ${TRIGGERED_USER_NAME}[${TRIGGERED_USER_ID}]\"",
        "&& echo \" Channel[id]: ${TRIGGERED_CHANNEL_NAME}[${TRIGGERED_CHANNEL_ID}]\""
      ],
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "List Example Commands",
      "description": "List commands from bashbot example commands",
      "help": "bashbot list-examples",
      "trigger": "list-examples",
      "location": "./examples",
      "command": [
        "find . -name \"*.json\"",
        "| xargs -I {} bash -c",
          "'export example=$(basename {} .json)",
          "&& printf \"%21s - %s\" \"$example\" \"https://github.com/mathew-fleisch/bashbot/tree/main/examples/$example\"",
          "&& echo'",
        "| sort -k 2"
      ],
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "Add Example Command",
      "description": "Add command from bashbot example commands",
      "help": "bashbot add-example",
      "trigger": "add-example",
      "location": "./examples",
      "command": [
        "./add-example/add-command.sh $(find . -name \"${add_command}.json\")"
      ],
      "parameters": [
        {
          "name": "add_command",
          "allowed": [],
          "description": "a command to add to bashbot config ('bashbot list-examples')",
          "source": ["find . -name \"*.json\" | xargs -I {} basename {} .json"]
        }
      ],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "Remove Example Command",
      "description": "Remove command from bashbot example commands",
      "help": "bashbot remove-example",
      "trigger": "remove-example",
      "location": "./examples",
      "command": ["./remove-example/remove-command.sh ${remove_command}"
      ],
      "parameters": [
        {
          "name": "remove_command",
          "allowed": [],
          "description": "a command to remove to bashbot config ('bashbot list-examples')",
          "source": ["find . -name \"*.json\" | xargs -I {} basename {} .json"]
        }
      ],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "BashBot scripts Scripts",
      "install": [
        "rm -rf bashbot-scripts || true",
        "&& git clone https://github.com/mathew-fleisch/bashbot-scripts.git"
      ]
    }
  ]
}
