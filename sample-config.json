{
  "admins": [
    {
      "trigger": "bashbat",
      "appName": "BashBot",
      "userIds": ["ADMIN-USER-ID"],
      "privateChannelId": "PRIVATE-CHANNEL-ID",
      "logChannelId": "LOG-CHANNEL-ID"
    }
  ],
  "messages": [
    {
      "active": true,
      "name": "processing_command",
      "text": ":robot_face: Processing command..."
    },
    {
      "active": true,
      "name": "processing_raw_command",
      "text": ":smiling_imp: Processing raw command..."
    },
    {
      "active": true,
      "name": "command_not_found",
      "text": ":thinking_face: Command not found..."
    },
    {
      "active": true,
      "name": "incorrect_parameters",
      "text": ":face_with_monocle: Incorrect number of parameters"
    },
    {
      "active": true,
      "name": "invalid_parameter",
      "text": ":face_with_monocle: Invalid parameter value: %s"
    },
    {
      "active": true,
      "name": "ephemeral",
      "text": ":shushing_face: Message only shown to user who triggered it."
    },
    {
      "active": true,
      "name": "unauthorized",
      "text": ":skull_and_crossbones: You are not authorized to use this command in this channel.\nAllowed in: [%s]"
    }
  ],
  "tools": [
    {
      "name": "BashBot Help",
      "description": "Show this message",
      "help": "bashbot help",
      "trigger": "help",
      "location": "./",
      "setup": "echo \"BashBot is a tool for infrastructure/devops teams to automate tasks triggered by slash-command-like declarative configuration\"",
      "command": "echo \"\\`\\`\\`\" && jq -r -c '.tools[] | \"\\(.help) - \\(.description)\"' ${BASHBOT_CONFIG_FILEPATH} && echo \"\\`\\`\\`\"",
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "text",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "Get User/Channel Info",
      "description": "Get information about the user and channel command is being run from",
      "help": "bashbot info",
      "trigger": "info",
      "location": "./example/info",
      "setup": "echo \"\"",
      "command": "./get-info.sh",
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "List Available Bashbot Commands",
      "description": "List all of the possible commands stored in bashbot",
      "help": "bashbot list",
      "trigger": "list",
      "location": "./",
      "setup": "echo \"\"",
      "command": "jq -r '.tools[] | .trigger + \" - \" + .name' ${BASHBOT_CONFIG_FILEPATH}",
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "Describe Bashbot [command]",
      "description": "Show the json object for a specific command",
      "help": "bashbot describe [command]",
      "trigger": "describe",
      "location": "./",
      "setup": "echo \"\"",
      "command": "jq '.tools[] | select(.trigger==\"${command}\")' ${BASHBOT_CONFIG_FILEPATH}",
      "parameters": [
        {
          "name": "command",
          "allowed": [],
          "description": "a command to describe ('bashbot list')",
          "source": "jq -r '.tools[] | .trigger' ${BASHBOT_CONFIG_FILEPATH}"
        }
      ],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    },
    {
      "name": "TEST Command",
      "description": "Show the json object for a specific command",
      "help": "bashbot test [command]",
      "trigger": "test",
      "location": "./",
      "setup": "echo \"\"",
      "command": "echo \"Username[id]: ${TRIGGERED_USER_NAME}[${TRIGGERED_USER_ID}]\" && echo \" Channel[id]: ${TRIGGERED_CHANNEL_NAME}[${TRIGGERED_CHANNEL_ID}]\"",
      "parameters": [],
      "log": false,
      "ephemeral": false,
      "response": "code",
      "permissions": [
        "all"
      ]
    }
  ],
  "dependencies": [
    {
      "name": "BashBot scripts Scripts",
      "install": "rm -rf bashbot-scripts || true && git clone https://github.com/mathew-fleisch/bashbot-scripts.git"
    },
    {
      "name": "Cards Against Humanity",
      "install": "rm -rf against-humanity || true && git clone https://github.com/nodanaonlyzuul/against-humanity.git"
    }
  ]
}
